<project>
    <shortName>Privatix</shortName>
    <fullName>Privatix Network</fullName>
    <version>0.19.0</version>
    <licenseFile>PN.lic</licenseFile>
    <leftImage>images/left.png</leftImage>
    <logoImage>images/top.png</logoImage>
    <wmImage>images/icons/48x48_win.png</wmImage>
    <componentList>
        <component>
            <name>core</name>
            <description>Core service</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>1</show>
            <desktopShortcutList>
                <shortcut>
                    <comment></comment>
                    <exec>${installdir}/${install_type}/dappgui/dapp-gui</exec>
                    <icon>${installdir}/${install_type}/dappgui/dapp-gui</icon>
                    <name>Privatix ${install_type}</name>
                    <path></path>
                    <platforms>windows</platforms>
                    <runAsAdmin>0</runAsAdmin>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}/${install_type}/dappgui/dapp-gui.exe</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon>${installdir}/${install_type}/dappgui/dapp-gui.exe</windowsIcon>
                    <windowsPath></windowsPath>
                </shortcut>
            </desktopShortcutList>
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfiles</name>
                    <platforms>all</platforms>
                    <shortcutList>
                        <shortcut>
                            <comment>Uninstall</comment>
                            <exec>${installdir}/${uninstallerName}</exec>
                            <icon></icon>
                            <name>Uninstall ${product_fullname}</name>
                            <path>${installdir}</path>
                            <platforms>all</platforms>
                            <runAsAdmin>0</runAsAdmin>
                            <runInTerminal>0</runInTerminal>
                            <windowsExec>${installdir}/${uninstallerName}.exe</windowsExec>
                            <windowsExecArgs></windowsExecArgs>
                            <windowsIcon></windowsIcon>
                            <windowsPath>${installdir}</windowsPath>
                        </shortcut>
                    </shortcutList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux</name>
                    <platforms>linux-x64</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../linux-dapp-installer/app.tar.xz</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../linux-dapp-installer/dapp-installer</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../linux-dapp-installer/dapp-installer.config.json</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../win-dapp-installer/app.zip</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../win-dapp-installer/dapp-installer.config.json</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../win-dapp-installer/dapp-installer.exe</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../mac-dapp-installer/app.zip</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../mac-dapp-installer/dapp-installer</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../mac-dapp-installer/dapp-installer.config.json</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
            </folderList>
            <postInstallationActionList>
                <propertiesFileSet>
                    <file>${installdir}/version</file>
                    <key>version</key>
                    <value>${install_type}</value>
                </propertiesFileSet>
                <showProgressDialog>
                    <title>${msg(Installer.showProgressDialog.Title)}</title>
                    <actionList>
                        <if>
                            <progressText>${msg(Installer.showProgressDialog.Description)}</progressText>
                            <actionList>
                                <if>
                                    <actionList>
                                        <runProgram>
                                            <program>${installdir}/dapp-installer</program>
                                            <programArguments>install -config dapp-installer.config.json -core -role ${install_type} -workdir ./${install_type}</programArguments>
                                            <progressText>${msg(Installer.showProgressDialog.TextCore)}</progressText>
                                            <workingDirectory>${installdir}</workingDirectory>
                                        </runProgram>
                                    </actionList>
                                    <conditionRuleList>
                                        <compareText>
                                            <logic>contains</logic>
                                            <text>${installed_version}</text>
                                            <value>unknown variable</value>
                                        </compareText>
                                    </conditionRuleList>
                                    <elseActionList>
                                        <runProgram>
                                            <program>${installdir}/dapp-installer</program>
                                            <programArguments>update -config dapp-installer.config.json -role ${install_type} -workdir ./${install_type}</programArguments>
                                            <progressText>${msg(Installer.showProgressDialog.TextCore)}</progressText>
                                            <workingDirectory>${installdir}</workingDirectory>
                                        </runProgram>
                                    </elseActionList>
                                </if>
                            </actionList>
                            <conditionRuleList>
                                <compareValues>
                                    <logic>equals</logic>
                                    <value1>${install_type}</value1>
                                    <value2>agent</value2>
                                </compareValues>
                            </conditionRuleList>
                            <elseActionList>
                                <if>
                                    <actionList>
                                        <runProgram>
                                            <program>${installdir}/dapp-installer</program>
                                            <programArguments>install -config dapp-installer.config.json -core -role ${install_type} -workdir ./${install_type}</programArguments>
                                            <progressText>${msg(Installer.showProgressDialog.TextCore)}</progressText>
                                            <workingDirectory>${installdir}</workingDirectory>
                                        </runProgram>
                                    </actionList>
                                    <conditionRuleList>
                                        <compareText>
                                            <logic>contains</logic>
                                            <text>${installed_version}</text>
                                            <value>unknown variable</value>
                                        </compareText>
                                    </conditionRuleList>
                                    <elseActionList>
                                        <runProgram>
                                            <program>${installdir}/dapp-installer</program>
                                            <programArguments>update -config dapp-installer.config.json -role ${install_type} -workdir ./${install_type}</programArguments>
                                            <progressText>${msg(Installer.showProgressDialog.TextCore)}</progressText>
                                            <workingDirectory>${installdir}</workingDirectory>
                                        </runProgram>
                                    </elseActionList>
                                </if>
                            </elseActionList>
                        </if>
                    </actionList>
                    <onErrorActionList>
                        <showWarning>
                            <text>${program_stdout}
${program_stderr}</text>
                        </showWarning>
                        <showProgressDialog>
                            <title>Please wait</title>
                            <actionList>
                                <runProgram>
                                    <explanation>Please wait Rollback</explanation>
                                    <program>${installdir}/dapp-installer</program>
                                    <programArguments>remove -workdir ./${install_type}</programArguments>
                                    <progressText>Please wait Rollback</progressText>
                                    <workingDirectory>${installdir}</workingDirectory>
                                    <ruleList>
                                        <fileExists>
                                            <path>${installdir}/${install_type}</path>
                                        </fileExists>
                                    </ruleList>
                                </runProgram>
                            </actionList>
                            <ruleList>
                                <compareText>
                                    <logic>contains</logic>
                                    <text>${installed_version}</text>
                                    <value>unknown variable</value>
                                </compareText>
                            </ruleList>
                        </showProgressDialog>
                        <deleteFile>
                            <excludeFiles>*.log</excludeFiles>
                            <matchHiddenFiles>1</matchHiddenFiles>
                            <path>${installdir}/*</path>
                            <ruleList>
                                <compareText>
                                    <logic>contains</logic>
                                    <text>${installed_version}</text>
                                    <value>unknown variable</value>
                                </compareText>
                            </ruleList>
                        </deleteFile>
                        <exit>
                            <exitCode>1</exitCode>
                        </exit>
                    </onErrorActionList>
                </showProgressDialog>
            </postInstallationActionList>
            <startMenuShortcutList>
                <startMenuShortcut>
                    <comment>Uninstall ${product_fullname}</comment>
                    <name>Uninstall ${product_fullname}</name>
                    <runAsAdmin>0</runAsAdmin>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}/${uninstallerName}.exe</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon></windowsIcon>
                    <windowsPath>${installdir}/</windowsPath>
                </startMenuShortcut>
                <startMenuShortcut>
                    <comment></comment>
                    <name>Privatix</name>
                    <runAsAdmin>0</runAsAdmin>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}/${install_type}/dappgui/dapp-gui.exe</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon></windowsIcon>
                    <windowsPath>${installdir}/</windowsPath>
                </startMenuShortcut>
            </startMenuShortcutList>
        </component>
        <component>
            <name>vpn</name>
            <description>VPN service</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>1</show>
            <postInstallationActionList>
                <showProgressDialog>
                    <title>${msg(Installer.showProgressDialog.Title)}</title>
                    <actionList>
                        <if>
                            <progressText>${msg(Installer.showProgressDialog.Description)}</progressText>
                            <actionList>
                                <if>
                                    <actionList>
                                        <runProgram>
                                            <program>${installdir}/dapp-installer</program>
                                            <programArguments>install-products -role ${install_type} -workdir ./${install_type}</programArguments>
                                            <progressText>${msg(Installer.showProgressDialog.Description)}</progressText>
                                            <workingDirectory>${installdir}</workingDirectory>
                                        </runProgram>
                                    </actionList>
                                    <conditionRuleList>
                                        <compareText>
                                            <logic>contains</logic>
                                            <text>${installed_version}</text>
                                            <value>unknown variable</value>
                                        </compareText>
                                    </conditionRuleList>
                                    <elseActionList>
                                        <runProgram>
                                            <program>${installdir}/dapp-installer</program>
                                            <programArguments>update-products -role ${install_type} -workdir ./${install_type}</programArguments>
                                            <progressText>${msg(Installer.showProgressDialog.Description)}</progressText>
                                            <workingDirectory>${installdir}</workingDirectory>
                                        </runProgram>
                                    </elseActionList>
                                </if>
                            </actionList>
                            <conditionRuleList>
                                <compareValues>
                                    <logic>equals</logic>
                                    <value1>${install_type}</value1>
                                    <value2>agent</value2>
                                </compareValues>
                            </conditionRuleList>
                            <elseActionList>
                                <if>
                                    <actionList>
                                        <runProgram>
                                            <program>${installdir}/dapp-installer</program>
                                            <programArguments>install-products -role ${install_type} -workdir ./${install_type} -product 73e17130-2a1d-4f7d-97a8-93a9aaa6f10d</programArguments>
                                            <progressText>${msg(Installer.showProgressDialog.TextVPN)}</progressText>
                                            <workingDirectory>${installdir}</workingDirectory>
                                        </runProgram>
                                    </actionList>
                                    <conditionRuleList>
                                        <compareText>
                                            <logic>contains</logic>
                                            <text>${installed_version}</text>
                                            <value>unknown variable</value>
                                        </compareText>
                                    </conditionRuleList>
                                </if>
                            </elseActionList>
                        </if>
                    </actionList>
                    <onErrorActionList>
                        <showWarning>
                            <text>${program_stdout}
${program_stderr}</text>
                        </showWarning>
                        <showProgressDialog>
                            <title>Please wait</title>
                            <actionList>
                                <runProgram>
                                    <explanation>Please wait Rollback</explanation>
                                    <program>${installdir}/dapp-installer</program>
                                    <programArguments>remove -workdir ./${install_type}</programArguments>
                                    <progressText>Please wait Rollback</progressText>
                                    <workingDirectory>${installdir}</workingDirectory>
                                    <ruleList>
                                        <fileExists>
                                            <path>${installdir}/${install_type}</path>
                                        </fileExists>
                                    </ruleList>
                                </runProgram>
                            </actionList>
                        </showProgressDialog>
                        <deleteFile>
                            <excludeFiles>*.log</excludeFiles>
                            <matchHiddenFiles>1</matchHiddenFiles>
                            <path>${installdir}/*</path>
                        </deleteFile>
                        <exit>
                            <exitCode>1</exitCode>
                        </exit>
                    </onErrorActionList>
                </showProgressDialog>
            </postInstallationActionList>
        </component>
    </componentList>
    <readyToInstallActionList>
        <propertiesFileGet>
            <abortOnError>0</abortOnError>
            <file>${installdir}/version</file>
            <key>installed_version</key>
            <showMessageOnError>0</showMessageOnError>
            <variable>installed_version</variable>
            <onErrorActionList>
                <setInstallerVariable>
                    <name>installed_version</name>
                    <value>0.18.0</value>
                    <ruleList>
                        <fileExists>
                            <path>${installdir}/version</path>
                        </fileExists>
                    </ruleList>
                </setInstallerVariable>
            </onErrorActionList>
        </propertiesFileGet>
        <propertiesFileGet>
            <abortOnError>0</abortOnError>
            <file>${installdir}/version</file>
            <key>version</key>
            <showMessageOnError>0</showMessageOnError>
            <variable>old_install_type</variable>
            <onErrorActionList>
                <setInstallerVariable>
                    <name>old_install_type</name>
                    <value>${install_type}</value>
                </setInstallerVariable>
            </onErrorActionList>
        </propertiesFileGet>
        <showWarning>
            <ruleEvaluationLogic>or</ruleEvaluationLogic>
            <text>${msg(Installer.AlreadyInstalled)}</text>
            <ruleList>
                <compareVersions>
                    <logic>greater_or_equal</logic>
                    <version1>${installed_version}</version1>
                    <version2>${project.version}</version2>
                </compareVersions>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${install_type}</text>
                    <value>${old_install_type}</value>
                </compareText>
            </ruleList>
        </showWarning>
        <exit>
            <ruleEvaluationLogic>or</ruleEvaluationLogic>
            <ruleList>
                <compareVersions>
                    <logic>greater_or_equal</logic>
                    <version1>${installed_version}</version1>
                    <version2>${project.version}</version2>
                </compareVersions>
                <compareText>
                    <logic>does_not_equal</logic>
                    <text>${install_type}</text>
                    <value>${old_install_type}</value>
                </compareText>
            </ruleList>
        </exit>
    </readyToInstallActionList>
    <postInstallationActionList>
        <propertiesFileSet>
            <file>${installdir}/version</file>
            <key>installed_version</key>
            <value>${project.version}</value>
        </propertiesFileSet>
        <deleteFile>
            <path>${installdir}/app.zip</path>
        </deleteFile>
        <readFile>
            <name>dappctrl_config</name>
            <path>${installdir}/agent/dappctrl/dappctrl.config.json</path>
            <ruleList>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${install_type}</value1>
                    <value2>agent</value2>
                </compareValues>
            </ruleList>
        </readFile>
        <setInstallerVariableFromRegEx>
            <name>pay_service_port</name>
            <pattern>.*"PayServer":{"Addr":"\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}:(\d+).*?</pattern>
            <substitution>\1</substitution>
            <text>${dappctrl_config}</text>
            <ruleList>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${install_type}</value1>
                    <value2>agent</value2>
                </compareValues>
            </ruleList>
        </setInstallerVariableFromRegEx>
        <readFile>
            <name>servers_config</name>
            <path>${installdir}/agent/product/73e17130-2a1d-4f7d-97a8-93a9aaa6f10d/config/server.conf</path>
            <ruleList>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${install_type}</value1>
                    <value2>agent</value2>
                </compareValues>
            </ruleList>
        </readFile>
        <setInstallerVariableFromRegEx>
            <name>vpn_port</name>
            <pattern>.*port\s+(\d+).*?</pattern>
            <substitution>\1</substitution>
            <text>${servers_config}</text>
            <ruleList>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${install_type}</value1>
                    <value2>agent</value2>
                </compareValues>
            </ruleList>
        </setInstallerVariableFromRegEx>
        <showInfo>
            <text>${msg(Installer.AfterInstallPorts)}</text>
            <ruleList>
                <compareValues>
                    <logic>equals</logic>
                    <value1>${install_type}</value1>
                    <value2>agent</value2>
                </compareValues>
            </ruleList>
        </showInfo>
        <createSymLink>
            <linkName>/Applications/Privatix ${install_type}</linkName>
            <target>${installdir}/${install_type}/dappgui/dapp-gui.app</target>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </createSymLink>
    </postInstallationActionList>
    <preUninstallationActionList>
        <readFile>
            <name>install_type</name>
            <path>${installdir}/version</path>
        </readFile>
        <showProgressDialog>
            <title>${msg(Installer.showProgressDialog.Title)}</title>
            <actionList>
                <runProgram>
                    <program>${installdir}/dapp-installer</program>
                    <programArguments>remove -workdir ./${install_type}</programArguments>
                    <progressText>${msg(Installer.Uninstallation.showProgressDialog.Description)}</progressText>
                    <workingDirectory>${installdir}</workingDirectory>
                </runProgram>
            </actionList>
        </showProgressDialog>
    </preUninstallationActionList>
    <postUninstallationActionList>
        <deleteFile>
            <matchHiddenFiles>1</matchHiddenFiles>
            <path>${installdir}</path>
        </deleteFile>
    </postUninstallationActionList>
    <allowComponentSelection>1</allowComponentSelection>
    <allowedLanguages>en ru</allowedLanguages>
    <createOsxBundleDmg>1</createOsxBundleDmg>
    <disableSplashScreen>1</disableSplashScreen>
    <enableRollback>0</enableRollback>
    <enableTimestamp>1</enableTimestamp>
    <nativePackageName>Privatix.app</nativePackageName>
    <osxApplicationBundleIcon>images/icons/macIcons.icns</osxApplicationBundleIcon>
    <osxUninstallerApplicationBundleIcon>images/icons/macIcons.icns</osxUninstallerApplicationBundleIcon>
    <outputDirectory>out</outputDirectory>
    <saveRelativePaths>1</saveRelativePaths>
    <singleInstanceCheck>1</singleInstanceCheck>
    <vendor>Privatix LTD</vendor>
    <windows64bitMode>1</windows64bitMode>
    <windowsExecutableIcon>images/icons/48x48_win.ico</windowsExecutableIcon>
    <windowsUninstallerExecutableIcon>images/icons/48x48_win.ico</windowsUninstallerExecutableIcon>
    <customLanguageFileList>
        <language>
            <code>en</code>
            <encoding>utf-8</encoding>
            <file>en.lng</file>
        </language>
    </customLanguageFileList>
    <installationAbortedActionList>
        <showProgressDialog>
            <title>Please wait</title>
            <actionList>
                <while>
                    <conditionRuleEvaluationLogic>or</conditionRuleEvaluationLogic>
                    <progressText>Please wait Rollback</progressText>
                    <actionList>
                        <wait ms="1000"/>
                    </actionList>
                    <conditionRuleList>
                        <processTest>
                            <logic>is_running</logic>
                            <name>dapp-installer.exe</name>
                        </processTest>
                        <processTest>
                            <logic>is_running</logic>
                            <name>dapp-installer</name>
                        </processTest>
                    </conditionRuleList>
                </while>
                <runProgram>
                    <abortOnError>0</abortOnError>
                    <explanation>Please wait Rollback</explanation>
                    <program>${installdir}/dapp-installer</program>
                    <programArguments>remove -workdir ./${install_type}</programArguments>
                    <progressText>Please wait Rollback</progressText>
                    <showMessageOnError>0</showMessageOnError>
                    <ruleList>
                        <fileExists>
                            <path>${installdir}/dapp-installer</path>
                        </fileExists>
                    </ruleList>
                </runProgram>
                <deleteFile>
                    <abortOnError>0</abortOnError>
                    <excludeFiles>*.log</excludeFiles>
                    <matchHiddenFiles>1</matchHiddenFiles>
                    <path>${installdir}/*</path>
                    <progressText>Please wait Rollback</progressText>
                    <showMessageOnError>0</showMessageOnError>
                </deleteFile>
            </actionList>
            <ruleList>
                <compareText>
                    <logic>does_not_contain</logic>
                    <text>${installed_version}</text>
                    <value>unknown variable</value>
                </compareText>
            </ruleList>
        </showProgressDialog>
    </installationAbortedActionList>
    <parameterList>
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value></value>
            <default>${platform_install_prefix}/${product_shortname}</default>
            <allowEmptyValue>0</allowEmptyValue>
            <cliOptionName>prefix</cliOptionName>
            <mustBeWritable>1</mustBeWritable>
            <mustExist>0</mustExist>
            <width>30</width>
        </directoryParameter>
        <choiceParameter>
            <name>install_type</name>
            <title>${msg(Installer.TypeOfInstallation)}</title>
            <description></description>
            <explanation>${msg(Installer.TypeOfInstallation.description)}</explanation>
            <value>client</value>
            <default>client</default>
            <allowEmptyValue>0</allowEmptyValue>
            <displayType>radiobuttons</displayType>
            <ordering>default</ordering>
            <ruleEvaluationLogic>or</ruleEvaluationLogic>
            <width>30</width>
            <optionList>
                <option>
                    <description></description>
                    <image></image>
                    <text>${msg(Installer.TypeOfInstallation.Client)}</text>
                    <value>client</value>
                </option>
                <option>
                    <description>${msg(Installer.TypeOfInstallation.Agent.Description)}</description>
                    <image></image>
                    <text>${msg(Installer.TypeOfInstallation.Agent)}</text>
                    <value>agent</value>
                </option>
            </optionList>
        </choiceParameter>
    </parameterList>
    <platformOptionsList>
        <platformOptions>
            <platform>osx</platform>
        </platformOptions>
    </platformOptionsList>
</project>

